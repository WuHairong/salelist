(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'Basketball'"
p3
sS'layer'
p4
S'/Users/hairongwu/Desktop/web2py/applications/salelist/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n#########################################################################\n\ndef index():\n    items=db().select(db.poster.ALL, orderby=db.poster.title)\n    return locals()\n#show each poster information:\n#seller name, rating, email,phone\n#poster title, category, date, image, description, price, status\ndef show():\n    poster=db.poster(request.args(0, cast=int)) or redirect(URL(\'index\'))\n    seller=db.seller(db.seller.id==poster.created_by)\n    images=db.image(db.image.poster_title==poster.title).select(db.image.ALL, orderby=db.image.title)\n    return locals()\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\nresponse._vars=response._caller(show)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/hairongwu/Desktop/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/Users/hairongwu/Desktop/web2py/applications/salelist/controllers/default.py", line 60, in <module>\n  File "/Users/hairongwu/Desktop/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/hairongwu/Desktop/web2py/applications/salelist/controllers/default.py", line 20, in show\n    images=db.image(db.image.poster_title==poster.title).select(db.image.ALL, orderby=db.image.title)\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/objects.py", line 534, in __call__\n    orderby_on_limitby=False).first()\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/objects.py", line 2025, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/adapters/sqlite.py", line 124, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1280, in select\n    sql = self._select(query, fields, attributes)\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1167, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/adapters/base.py", line 952, in expand\n    rv = op(first, second, **optional_args)\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/adapters/base.py", line 846, in EQ\n    self.expand(second, first.type))\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/adapters/base.py", line 962, in expand\n    rv = self.represent(expression, field_type)\n  File "/Users/hairongwu/Desktop/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1439, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'Basketball\'\n'
p11
s.